{"_id":"_design/spatial","language":"javascript","spatial":{"poi":"/*\n  This function indexes airports and landmarks. An example app would\n  show them on a map and you could click on them and get the name and\n  URL if there is one. Or you could have a list of items in a table\n  below the map that shows the items by name and the URL.\n*/\nfunction(doc, meta) {\n    var activityToNumber = {\n        'buy': 1,\n        'do': 2,\n        'drink': 3,\n        'eat': 4,\n        'listing': 5,\n        'see': 6,\n        'sleep': 7\n    };\n\n    var key;\n    var value;\n    if (doc.type === 'airport') {\n        // We store airports as activity `0`\n        key = [doc.geo.lon, doc.geo.lat, doc.geo.alt, 0];\n        value = {name: doc.airportname};\n        emit(key, value);\n    }\n    else if(doc.type === 'landmark') {\n        key = [doc.geo.lon, doc.geo.lat, 0, activityToNumber[doc.activity]];\n        value = {name: doc.name};\n        if (doc.url !== null) {\n            value.url = doc.url;\n        }\n        emit(key, value);\n    }\n}\n","routes":"/*\n  Emit all the flights. You can filter them by day and time.\n*/\nfunction(doc, meta) {\n    if (doc.type === 'route') {\n        for (var i = 0; i < doc.schedule.length; i++) {\n            var schedule = doc.schedule[i];\n            var time = parseInt(schedule.utc.replace(/:/g, ''));\n            var key = [schedule.day, time];\n            var value = [\n                schedule.flight,\n                doc.sourceairport,\n                doc.destinationairport\n            ];\n            emit(key, value);\n        }\n    }\n}\n"}}